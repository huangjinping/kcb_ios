//
//  MyStoreController.m
//  Merchant
//
//  Created by Wendy on 16/1/18.
//  Copyright © 2016年 tranPlat. All rights reserved.
//

#import "MyStoreController.h"
#import <HTHorizontalSelectionList/HTHorizontalSelectionList.h>
#import "CWStarRateView.h"
#import "MEMarchantInfo.h"
#import <MJExtension.h>
#import <UIImageView+WebCache.h>
#import "ChangeStoreController.h"
#import "GTMBase64.h"
#import "EditPhotoViewController.h"

#define kStarRateWidth 100

#define kStarRateHeight 40

#define kHeaderViewHeight 200

@interface MyStoreController ()<HTHorizontalSelectionListDataSource,HTHorizontalSelectionListDelegate,UIImagePickerControllerDelegate,
UINavigationControllerDelegate,UIActionSheetDelegate,UITableViewDelegate,UITableViewDataSource,EditPhotoViewControllerDelegate>

@property (nonatomic, strong) HTHorizontalSelectionList *segment;
@property (nonatomic, strong) UIImageView *storeImgView;
@property (strong, nonatomic) CWStarRateView *starRateView;
@property (strong, nonatomic) UILabel *gradeLab;

@property (nonatomic,strong) MEMarchantInfo *merchantInfo;
@property (nonatomic,strong) NSArray *array;
@property (nonatomic,strong)UITableView *tableView;

@end

@implementation MyStoreController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self setNavTitle:@"我的门店"];
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, self.view.height - 20- APP_NAV_HEIGHT) style:UITableViewStyleGrouped];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.backgroundColor =  kColorBackgroud;
    [self.view addSubview:self.tableView];

    // Do any additional setup after loading the view.
    [self buildHeaderView];
    [self requestMerchantInfo];
//    [self buildNavigationBar];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)requestMerchantInfo{
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;
    NSDictionary *param = @{@"merid":[NSNumber numberWithInteger:merid].stringValue};
    [AFNHttpRequest afnHttpRequestUrl:kHttpMerchantInfo param:param success:^(id responseObject){
        if (kRspCode(responseObject) == 0) {
            NSDictionary *body = responseObject[@"body"];
            _merchantInfo = [MEMarchantInfo mj_objectWithKeyValues:body];
            ApplicationDelegate.shareLoginData.userdata.mername = _merchantInfo.info.name;
            ApplicationDelegate.shareLoginData.userdata.logo = _merchantInfo.info.logo_pic;
            [Utils saveToArchiverWithObject:ApplicationDelegate.shareLoginData toDocumentWithFileName:kLoginUserData];
            [self buildData];
            [self.tableView reloadData];
        }else{
            [UIHelper alertWithMsg:kRspMsg(responseObject)];
        }
        
    } failure:^(NSError *error) {
        [UIHelper alertWithMsg:kNetworkErrorDesp];
    } view:self.view];
    
}
- (void)buildNavigationBar{
    self.segment = [[HTHorizontalSelectionList alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH*0.80, 40)];
    self.segment.backgroundColor = [UIColor clearColor];
    self.segment.delegate = self;
    self.segment.dataSource = self;
    self.segment.bottomTrimHidden = YES;
    self.segment.selectionIndicatorAnimationMode = HTHorizontalSelectionIndicatorAnimationModeNoBounce;
    
    self.segment.selectionIndicatorColor = [UIColor whiteColor];
    [self.segment setTitleColor:[UIColor colorWithHex:0xc0e3c4] forState:UIControlStateNormal];
    [self.segment setTitleFont:V3_36PX_FONT forState:UIControlStateNormal];
    [self.segment setTitleFont:V3_36PX_FONT forState:UIControlStateSelected];
    self.navigationItem.titleView = self.segment;
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
- (void)buildData{
    //图片
    NSString *url = [NSString stringWithFormat:@"%@%@",kHttpIPAddress,_merchantInfo.info.logo_pic];
    NSLog(@"当前的图片地址:%@",url);
    [_storeImgView sd_setImageWithURL:[NSURL URLWithString:url] placeholderImage:[UIImage imageNamed:@"s1"] options:SDWebImageRefreshCached];
    
    
    self.starRateView.scorePercent = _merchantInfo.info.level.floatValue/5;//按百分比
    _gradeLab.text = [NSString stringWithFormat:@"%.1f分",_merchantInfo.info.level.floatValue];
    
    
    NSString *workTime = [NSString stringWithFormat:@"%@~%@",_merchantInfo.info.open_time,_merchantInfo.info.close_time];
    NSString *payType = _merchantInfo.info.account_type;
    self.array = @[@{@"门店名称": _merchantInfo.info.name},
                   @{@"门店地址":_merchantInfo.info.address},
                   @{@"联系人":_merchantInfo.info.contacts},
                   @{@"联系电话":_merchantInfo.info.telno},
                   @{@"手机号码":_merchantInfo.info.phone_no},
                   @{@"支付账号类型":[self getPayNameByType:payType]},
                   @{@"支付账号":_merchantInfo.info.pay_account},
                   @{@"营业时间":workTime},
                   @{@"所属省市":_merchantInfo.info.cname},
                   @{@"门店描述":_merchantInfo.info.describe_m}
                   ];
}
- (NSString *)getPayNameByType:(NSString *)type{
    NSString *ret = @"";
    for (Paytype *item in ApplicationDelegate.shareLoginData.userdata.paytype) {
        if ([type isEqualToString:item.status]) {
            ret = item.value;
            break;
        }
    }
    return ret;
}
- (void)buildHeaderView{
    UIView *backView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH, kHeaderViewHeight)];
    //图片
    _storeImgView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH, kHeaderViewHeight)];
//    _storeImgView.contentMode = UIViewContentModeCenter;
    _storeImgView.userInteractionEnabled = YES;
    
    UITapGestureRecognizer *tapGesture =
    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(headerTap:)];
    [_storeImgView addGestureRecognizer:tapGesture];
    [backView addSubview:_storeImgView];
    
    self.starRateView = [[CWStarRateView alloc] initWithFrame:CGRectMake(10, _storeImgView.height-kStarRateHeight, kStarRateWidth, kStarRateHeight) numberOfStars:5];
    self.starRateView.allowIncompleteStar = YES;
    self.starRateView.hasAnimation = YES;
    
    _gradeLab = [[UILabel alloc] initWithFrame:CGRectMake(self.starRateView.right+5, self.starRateView.top, 50, kStarRateHeight)];
    _gradeLab.textColor = [UIColor orangeColor];
    [_storeImgView addSubview:_gradeLab];
    [_storeImgView addSubview:self.starRateView];
    [_storeImgView addSubview:_gradeLab];
    self.tableView.tableHeaderView = backView;
}
#pragma mark - UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 10;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 1 && indexPath.row == 9) {
        CGSize titleSize = [_merchantInfo.info.describe_m boundingRectWithSize:CGSizeMake(APP_WIDTH*0.60, 1000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{ NSFontAttributeName: V3_36PX_FONT} context:nil].size;
        return MAX(titleSize.height, 44);
    }
    return 44;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.01;
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 2;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0) {
        return 2;
    }
    return self.array.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1
                                      reuseIdentifier:identifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.textLabel.font = V3_36PX_FONT;
        cell.detailTextLabel.font = V3_36PX_FONT;
    }
    
    if (indexPath.section == 1) {
        cell.textLabel.text = [self.array[indexPath.row] allKeys].lastObject;
        cell.detailTextLabel.text = [self.array[indexPath.row] allValues].lastObject;
        cell.detailTextLabel.numberOfLines = 0;
        if (indexPath.row == 5 ||indexPath.row == 6 || indexPath.row == 8) {
            cell.accessoryType = UITableViewCellAccessoryNone;

        }else if(indexPath.row == 9){
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        }else{
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        }
    }else{
        if (indexPath.row == 0) {
            cell.textLabel.text = @"每日最大接单量";
            cell.detailTextLabel.text = _merchantInfo.info.form_num;
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        }else{
            cell.textLabel.text = @"开店";
            UISwitch *switchCtr = [[UISwitch alloc] init];
            switchCtr.on = _merchantInfo.info.isclose.integerValue ?NO:YES;
            [switchCtr addTarget:self action:@selector(setMerchantOpen:) forControlEvents:UIControlEventValueChanged];
            cell.accessoryView = switchCtr;
        }
    }
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(nonnull NSIndexPath *)indexPath{
    if (indexPath.section == 0 && indexPath.row == 1) {
        return;
    }
    if (indexPath.section == 1 &&(indexPath.row == 5 ||indexPath.row == 6 || indexPath.row == 8)) {
        return;
    }
    ChangeStoreController *changeStore = [[ChangeStoreController alloc] init];
    changeStore.changeType = indexPath.section * 10 +indexPath.row;
    changeStore.info = _merchantInfo.info;
    changeStore.commplete = ^{
        [self requestMerchantInfo];
    };
    [self.navigationController pushViewController:changeStore animated:YES];
}
#pragma mark - 处理提交照片
- (void)headerTap:(id)sender{
    UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:@"拍照" otherButtonTitles:@"从手机相册选择", nil];
    [actionSheet showInView:self.view];
}
#pragma mark -开店关店设置
- (void)setMerchantOpen:(UISwitch *)sender{
    NSString *isClose = sender.on ? @"0":@"1";
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;
    NSDictionary *param = @{@"merid":[NSNumber numberWithInteger:merid].stringValue,@"isClose":isClose};
    [AFNHttpRequest afnHttpRequestUrl:KHttpMerSwitch param:param success:^(id responseObject) {
        if (kRspCode(responseObject) == 0) {
            
        }else{
            sender.on = !sender.on;
        }
        
    } failure:^(NSError *error) {
        sender.on = !sender.on;
    } view:self.view];
}

#pragma mark - UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 2) {
        return;
    }else{
        UIImagePickerController *controller = [[UIImagePickerController alloc] init];
        if (buttonIndex == 0) {
            controller.sourceType = UIImagePickerControllerSourceTypeCamera;
        }else{
            controller.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        }
        controller.delegate = self;
        [self presentViewController:controller animated:YES completion:nil];
        
    }
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *theImage =[info objectForKey:UIImagePickerControllerOriginalImage];
//    CGSize size = theImage.size;
//    NSLog(@"处理前:%f,%f",size.width,size.height);
//    theImage = [self handleImage:theImage];
//    CGSize size1 = theImage.size;
//    NSLog(@"处理前:%f,%f",size1.width,size1.height);
    
//    [picker dismissViewControllerAnimated:YES completion:^{
//        
//    }];
    
    EditPhotoViewController *epvc = [[EditPhotoViewController alloc] init];
    epvc.image     = theImage;
    epvc.delegate  = self;
    epvc.shapeType = EditShapeTypeSquare;
    [picker pushViewController:epvc animated:YES];
    
}
- (UIImage *)handleImage:(UIImage *)image
{
    image = [image rotateImage];
    image = [image imageCompressForTargetWidth:kHeaderViewHeight];
    return image;
}
#pragma mark - EditPhotoViewControllerDelegate

- (void)editPhotoViewController:(EditPhotoViewController *)controller didEditImage:(UIImage *)image
{
    CGSize size2 = image.size;
    NSLog(@"处理前:%f,%f",size2.width,size2.height);

    UIImage *theImage = ImageByScalingAndCroppingForSize(image, CGSizeMake(kHeaderViewHeight, kHeaderViewHeight));
    CGSize size1 = theImage.size;
    NSLog(@"处理后:%f,%f",size1.width,size1.height);
    
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;
    NSData *smallImgData = [NSData dataWithData:UIImageJPEGRepresentation(theImage, 1.0f)];
    NSString *imageBase64 = [GTMBase64 stringByEncodingData:smallImgData];
    NSDictionary *param = @{@"dataString":imageBase64,@"merid":[NSNumber numberWithInteger:merid].stringValue};
    [AFNHttpRequest afnHttpRequestUrl:kHttpUploadMerImg param:param success:^(id responseObject) {
        if (kRspCode(responseObject) == 0) {
            _storeImgView.image = theImage;
            [UIHelper alertWithMsg:@"门店图片设置成功"];
        }else{
            [UIHelper alertWithMsg:kRspMsg(responseObject)];
        }
    } failure:^(NSError *error) {
        [UIHelper alertWithMsg:kNetworkErrorDesp];
    } view:self.view];

    [controller dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark - HTHorizontalSelectionListDataSource Protocol Methods

- (NSInteger)numberOfItemsInSelectionList:(HTHorizontalSelectionList *)selectionList {
    return 2;
}

- (NSString *)selectionList:(HTHorizontalSelectionList *)selectionList titleForItemWithIndex:(NSInteger)index {
    if (index == 0) {
        return @"门店信息";
    }else{
        return @"门店定位";
    }
}
- (void)backEvent:(UIBarButtonItem *)paramItem
{
    [ApplicationDelegate goBackHomeView];
}

@end
