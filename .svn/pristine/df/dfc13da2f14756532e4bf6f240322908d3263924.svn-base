//
//  MyStoreViewController.m
//  Merchant
//
//  Created by Wendy on 15/12/18.
//  Copyright © 2015年 tranPlat. All rights reserved.
//

#import "MyStoreViewController.h"
#import <HTHorizontalSelectionList/HTHorizontalSelectionList.h>
#import "CWStarRateView.h"
#import "CustomInputView.h"
#import "MEMarchantInfo.h"
#import <MJExtension.h>
#import <UIImageView+WebCache.h>

#define kStarRateWidth 100
#define kStarRateHeight 40

@interface MyStoreViewController ()<HTHorizontalSelectionListDataSource,HTHorizontalSelectionListDelegate,UIImagePickerControllerDelegate,
UINavigationControllerDelegate,UIActionSheetDelegate>{
    BOOL isEditing;
}
@property (nonatomic, strong) HTHorizontalSelectionList *segment;
@property (nonatomic, strong) UIScrollView *scrollView;

@property (nonatomic, strong) UIImageView *storeImgView;
@property (strong, nonatomic) CWStarRateView *starRateView;
@property (strong, nonatomic) UILabel *gradeLab;

@property (nonatomic,strong) UITextField *maxOrderTF;
@property (nonatomic,retain)UISwitch *switchCtrl;

@property (nonatomic,strong) UITextField *storeNameTF;
@property (nonatomic,strong) UITextField *storeAddressTF;
@property (nonatomic,strong) UITextField *contactorTF;
@property (nonatomic,strong) UITextField *mobileTF;
@property (nonatomic,strong) UITextField *phoneTF;

@property (nonatomic,strong) CustomInputView *accountTypeTF;
@property (nonatomic,strong) UITextField *accountTF;
@property (nonatomic,strong) CustomInputView *cityTF;
@property (nonatomic,strong) CustomInputView *workTimeTF;
@property (nonatomic,strong) UITextField *storeDescTF;

@property (nonatomic,strong) MEMarchantInfo *merchantInfo;
@end

@implementation MyStoreViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    isEditing = NO;
    [self setNavTitle:@"我的门店"];

    // Do any additional setup after loading the view.
    [self requestMerchantInfo];
    [self buildNavigationBar];
    [self buildUI];
}
- (void)buildData{
    //图片
    NSString *url = [NSString stringWithFormat:@"%@%@",kHttpIPAddress,_merchantInfo.info.logo_pic];
    [_storeImgView sd_setImageWithURL:[NSURL URLWithString:url] placeholderImage:[UIImage imageNamed:@"s1"]];
    
    self.starRateView.scorePercent = _merchantInfo.info.level.floatValue;
    CGFloat level = _merchantInfo.info.level.floatValue *5;
    _gradeLab.text = [NSString stringWithFormat:@"%.1f分",level];
    
    _maxOrderTF.text = _merchantInfo.info.form_num;
    _switchCtrl.on = _merchantInfo.info.isclose ? YES:NO;
    _storeNameTF.text = _merchantInfo.info.name;
    _storeAddressTF.text = _merchantInfo.info.address;
    _contactorTF.text = _merchantInfo.info.contacts;
    _mobileTF.text = _merchantInfo.info.phone_no;
    _phoneTF.text = _merchantInfo.info.telno;
    [_accountTypeTF setTextField:@"dddddd"];
    _accountTF.text = _merchantInfo.info.pay_account?_merchantInfo.info.pay_account:@"";
    [_cityTF setTextField:_merchantInfo.info.cname];
    [_workTimeTF setTextField:[NSString stringWithFormat:@"%@~%@",_merchantInfo.info.open_time,_merchantInfo.info.close_time]];
    _storeDescTF.text = _merchantInfo.info.describe_m?_merchantInfo.info.describe_m:@"";
}
- (void)requestMerchantInfo{
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;
    NSDictionary *param = @{@"merid":[NSNumber numberWithInteger:merid].stringValue};
    [AFNHttpRequest afnHttpRequestUrl:kHttpMerchantInfo param:param success:^(id responseObject){
        if (kRspCode(responseObject) == 0) {
            NSDictionary *body = responseObject[@"body"];
            _merchantInfo = [MEMarchantInfo mj_objectWithKeyValues:body];
            [self buildData];
        }
        
    } failure:^(NSError *error) {
        
    }];

}
- (void)buildNavigationBar{
    self.segment = [[HTHorizontalSelectionList alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH*0.60, 40)];
    self.segment.backgroundColor = [UIColor clearColor];
    self.segment.delegate = self;
    self.segment.dataSource = self;
    self.segment.bottomTrimHidden = YES;
    self.segment.selectionIndicatorAnimationMode = HTHorizontalSelectionIndicatorAnimationModeLightBounce;
    
    self.segment.selectionIndicatorColor = [UIColor whiteColor];
    [self.segment setTitleColor:[UIColor colorWithHex:0xc0e3c4] forState:UIControlStateNormal];
    [self.segment setTitleFont:[UIFont systemFontOfSize:16] forState:UIControlStateNormal];
    [self.segment setTitleFont:[UIFont boldSystemFontOfSize:16] forState:UIControlStateSelected];
    self.navigationItem.titleView = self.segment;
    
    
    //编辑按钮
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"edit_status"] style:UIBarButtonItemStylePlain target:self action:@selector(editStoreInfo)];
    [self.navigationItem.rightBarButtonItem setTintColor:[UIColor whiteColor]];

}

- (void)buildUI{
    _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH, APP_HEIGHT- APP_NAV_HEIGHT+10)];
    _scrollView.backgroundColor = RGB(183, 183, 183);
    [self.view addSubview:_scrollView];

    //图片
    _storeImgView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, APP_WIDTH, 200)];
    _storeImgView.userInteractionEnabled = YES;
    
    UITapGestureRecognizer *tapGesture =
    [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(headerTap:)];
    [_storeImgView addGestureRecognizer:tapGesture];
    [_scrollView addSubview:_storeImgView];
    
    self.starRateView = [[CWStarRateView alloc] initWithFrame:CGRectMake(10, _storeImgView.height-kStarRateHeight, kStarRateWidth, kStarRateHeight) numberOfStars:5];
    self.starRateView.scorePercent = 0.8;
    self.starRateView.allowIncompleteStar = YES;
    self.starRateView.hasAnimation = YES;
    
    _gradeLab = [[UILabel alloc] initWithFrame:CGRectMake(self.starRateView.right+5, self.starRateView.top, 50, kStarRateHeight)];
    _gradeLab.textColor = [UIColor orangeColor];
    [_storeImgView addSubview:_gradeLab];
    [_storeImgView addSubview:self.starRateView];
    
    //设置服务数
    UIView *middleView = [[UIView alloc] initWithFrame:CGRectMake(0, _storeImgView.bottom +10, APP_WIDTH, 80)];
    middleView.backgroundColor = [UIColor whiteColor];
    [_scrollView addSubview:middleView];
    CGFloat leftM = 15;
    CGFloat cellHeigth = 40;
    CGFloat cellWith = 100;
    CGFloat middleMargin = 10;

    CGFloat lineWidth = APP_WIDTH-2*leftM;

    _maxOrderTF = [self createTextfieldFrame:CGRectMake(leftM, 0, lineWidth, cellHeigth) placeholder:@"请输入每天最大接单量" title:@"服务设置："];
    [middleView addSubview:_maxOrderTF];
    _maxOrderTF.right = middleView.right - middleMargin;
    
    
    UILabel *storeLab = [self createLabelFrame:CGRectMake(leftM, _maxOrderTF.bottom, cellWith, cellHeigth) title:@"开店"];
    [middleView addSubview:storeLab];
    _switchCtrl = [[UISwitch alloc] init];
    _switchCtrl.centerY = storeLab.centerY;
    _switchCtrl.left = APP_WIDTH - 70;
    [_switchCtrl addTarget:self action:@selector(setMerchantOpen:) forControlEvents:UIControlEventValueChanged];
    [middleView addSubview:_switchCtrl];
    
//底部view
    
    UIView *bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, middleView.bottom +middleMargin, APP_WIDTH, 420)];
    bottomView.backgroundColor = [UIColor whiteColor];
    [_scrollView addSubview:bottomView];

    _storeNameTF = [self createTextfieldFrame:CGRectMake(leftM, 0, lineWidth, cellHeigth) placeholder:@"请输入" title:@"门店名称"];
    [bottomView addSubview:_storeNameTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _storeNameTF.bottom-1, lineWidth, 1) lineColor:kLineColor];
   
    _storeAddressTF = [self createTextfieldFrame:CGRectMake(leftM, _storeNameTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"门店地址"];
    [bottomView addSubview:_storeAddressTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _storeAddressTF.bottom-1, lineWidth, 1) lineColor:kLineColor];
    
    _contactorTF = [self createTextfieldFrame:CGRectMake(leftM, _storeAddressTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"联系人"];
    [bottomView addSubview:_contactorTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _contactorTF.bottom-1, lineWidth, 1) lineColor:kLineColor];

    _mobileTF = [self createTextfieldFrame:CGRectMake(leftM, _contactorTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"联系电话"];
    [bottomView addSubview:_mobileTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _mobileTF.bottom-1, lineWidth, 1) lineColor:kLineColor];

    _phoneTF = [self createTextfieldFrame:CGRectMake(leftM, _mobileTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"手机号码"];
    [bottomView addSubview:_phoneTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _phoneTF.bottom-1, lineWidth, 1) lineColor:kLineColor];


    _accountTypeTF = [[CustomInputView alloc] initWithFrame:CGRectMake(0, _phoneTF.bottom, APP_WIDTH, cellHeigth) title:@"支付账号类型" placeholder:@"" value:@""];
    
    [_accountTypeTF setRightImage:@"right_arrow"];
    [bottomView addSubview:_accountTypeTF];

    
    _accountTF = [self createTextfieldFrame:CGRectMake(leftM, _accountTypeTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"支付账号"];
    [bottomView addSubview:_accountTF];
    [bottomView addLineWithFrame:CGRectMake(leftM, _accountTF.bottom-1, lineWidth, 1) lineColor:kLineColor];

    
    _workTimeTF = [[CustomInputView alloc] initWithFrame:CGRectMake(0, _accountTF.bottom, APP_WIDTH, cellHeigth) title:@"营业时间" placeholder:@"" value:@""];
    [_workTimeTF setRightImage:@"right_arrow"];
    [bottomView addSubview:_workTimeTF];



    _cityTF = [[CustomInputView alloc] initWithFrame:CGRectMake(0, _workTimeTF.bottom, APP_WIDTH, cellHeigth) title:@"所属省市" placeholder:@"" value:@"河南省 濮阳市 华龙区"];
    [_cityTF setRightImage:@""];
    [bottomView addSubview:_cityTF];


    _storeDescTF = [self createTextfieldFrame:CGRectMake(leftM, _cityTF.bottom, lineWidth, cellHeigth) placeholder:@"请输入" title:@"门店描述"];
    [bottomView addSubview:_storeDescTF];
    
    [_scrollView autoContentSize];

}

//输入项textfiled
- (UITextField *)createTextfieldFrame:(CGRect)frame placeholder:(NSString*)placeholder title:(NSString *)title{
    
    CGFloat cellHeigth = 40;
 
    CGFloat cellWith = 110;

    UITextField * textfield = [[UITextField alloc]initWithFrame:frame];
    textfield.leftViewMode = UITextFieldViewModeAlways;
    textfield.leftView = [self createLabelFrame:CGRectMake(0, 0, cellWith, cellHeigth) title:title];

    textfield.textColor = kColor0X666666;
    textfield.font = V3_36PX_FONT;
    textfield.attributedPlaceholder = [[NSAttributedString alloc] initWithString:placeholder attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:15]}];
    textfield.enabled = NO;
    return textfield;
}
//选择项textfiled
//- (UITextField *)createTextfieldFrame:(CGRect)frame value:(NSString*)value title:(NSString *)title{
//    
//    CGFloat cellHeigth = 40;
//    CGFloat cellWith = 110;
//    
//    UITextField * textfield = [[UITextField alloc]initWithFrame:frame];
//    textfield.enabled = NO;
//    textfield.leftViewMode = UITextFieldViewModeAlways;
//    textfield.leftView = [self createLabelFrame:CGRectMake(0, 0, cellWith, cellHeigth) title:title];
//    textfield.text = value;
//    textfield.rightViewMode = UITextFieldViewModeAlways;
//    UIImageView *imgView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"right_arrow"]];
//    imgView.frame = CGRectMake(0, 0, 9, 16);
//    imgView.contentMode = UIViewContentModeCenter;
//    textfield.rightView = imgView;
//    return textfield;
//}


- (UILabel *)createLabelFrame:(CGRect)frame title:(NSString *)title{
    UILabel *settingLab = [[UILabel alloc] initWithFrame:frame];
    settingLab.text = title;
    settingLab.textColor = kColor0X666666;
    settingLab.font = V3_36PX_FONT;
    return settingLab;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (void)backEvent:(UIBarButtonItem *)paramItem
{
    [ApplicationDelegate goBackHomeView];
}
- (void)editStoreInfo{
    if(isEditing){
        [self requestModifyMerchantInfo];
    }else{
        [self setMerchantInfoEditing];
    }
}
- (void)setMerchantInfoEditing{
    _maxOrderTF.enabled = YES;
    _maxOrderTF.textColor = kColorOXB4B4B4;
    _storeNameTF.enabled = YES;
    _storeNameTF.textColor = kColorOXB4B4B4;
    
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle
                                      reuseIdentifier:identifier];
    }
    
    return cell;
}

#pragma mark - HTHorizontalSelectionListDataSource Protocol Methods

- (NSInteger)numberOfItemsInSelectionList:(HTHorizontalSelectionList *)selectionList {
    return 2;
}

- (NSString *)selectionList:(HTHorizontalSelectionList *)selectionList titleForItemWithIndex:(NSInteger)index {
    if (index == 0) {
        return @"门店信息";
    }else{
        return @"门店定位";
    }
}

#pragma mark - HTHorizontalSelectionListDelegate Protocol Methods

- (void)selectionList:(HTHorizontalSelectionList *)selectionList didSelectButtonWithIndex:(NSInteger)index {
}

#pragma mark - 处理提交照片
- (void)headerTap:(id)sender{
    UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:@"拍照" otherButtonTitles:@"从手机相册选择", nil];
    [actionSheet showInView:self.view];
}
#pragma mark -开店关店设置
- (void)setMerchantOpen:(UISwitch *)sender{
    NSString *isClose = sender.on ? @"1":@"0";
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;
    NSDictionary *param = @{@"merid":[NSNumber numberWithInteger:merid].stringValue,@"isClose":isClose};
    [AFNHttpRequest afnHttpRequestUrl:KHttpMerSwitch param:param success:^(id responseObject) {
        if (kRspCode(responseObject) == 0) {
            
        }else{
            sender.on = !sender.on;
        }
        
    } failure:^(NSError *error) {
        sender.on = !sender.on;
    }];
}
#pragma mark - 修改门店信息接口
- (void)requestModifyMerchantInfo{
    NSInteger merid = ApplicationDelegate.shareLoginData.userdata.mid;

    NSDictionary *param = @{
                            @"merid":[NSNumber numberWithInteger:merid].stringValue,
                            @"userid":ApplicationDelegate.accountId,
                            @"address":@"",
                            @"close_time":@"",
                            @"contacts":@"",
                            @"describe_m":@"",
                            @"describe_m":@"",
                            @"describe_m":@"",
                            @"open_time":@"",
                            @"phone_no":@"",
                            @"telno":@""
                            };
    [AFNHttpRequest afnHttpRequestUrl:kHttpEditMerchant param:param success:^(id responseObject) {
        if (kRspCode(responseObject) == 0) {
            
        }
    } failure:^(NSError *error) {
        
    }];
}
#pragma mark - UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 2) {
        return;
    }else{
        UIImagePickerController *controller = [[UIImagePickerController alloc] init];
        if (buttonIndex == 0) {
            controller.sourceType = UIImagePickerControllerSourceTypeCamera;
        }else{
            controller.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        }
        controller.delegate = self;
        [self presentViewController:controller animated:YES completion:nil];
        
    }
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *theImage =[info objectForKey:UIImagePickerControllerOriginalImage];
    CGSize size = theImage.size;
    NSLog(@"处理前:%f,%f",size.width,size.height);
    theImage = [self handleImage:theImage];
    CGSize size1 = theImage.size;
    NSLog(@"处理前:%f,%f",size1.width,size1.height);
    
    _storeImgView.image = theImage;
    [picker dismissViewControllerAnimated:YES completion:^{
        
    }];
    
}
- (UIImage *)handleImage:(UIImage *)image
{
    image = [image rotateImage];
    image = [image imageCompressForTargetWidth:100];
    return image;
}

@end
