//
//  MapViewController.m
//  Merchant
//
//  Created by Wendy on 16/1/20.
//  Copyright © 2016年 tranPlat. All rights reserved.
//

#import "MapViewController.h"

@interface MapViewController ()<UITableViewDataSource,UITableViewDelegate>
{
    AMapNearbySearchManager *_nearbyManager;
    CGFloat latitude;
    CGFloat longitude;

}
@property (nonatomic)NSMutableArray *arrayList;
@end

@implementation MapViewController
@synthesize mapView = _mapView;
@synthesize search  = _search;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self initMapView];
    [self initSearch];
    
    
    if ([[UIDevice currentDevice].systemVersion floatValue] >= 8.0)
    {
        self.locationManager = [[CLLocationManager alloc] init];        
        [self.locationManager requestAlwaysAuthorization];
    }

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
- (void)initMapView
{
    CGRect frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height/2);
    self.mapView = [[MAMapView alloc] initWithFrame:frame];
    self.mapView.showsUserLocation = YES;
    self.mapView.userTrackingMode = MAUserTrackingModeFollow;
    self.mapView.delegate = self;
    [self.view addSubview:self.mapView];
    
    self.arrayList = [NSMutableArray arrayWithObjects:@"11111",@"22222",@"33333",@"44444", nil];
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, self.mapView.frame.size.height, self.mapView.frame.size.width, self.mapView.frame.size.height) style:UITableViewStylePlain];
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;
    [self.view addSubview:tableView];
}
- (void)initSearch
{
    [AMapSearchServices sharedServices].apiKey = (NSString *)APIKey;
    self.search = [[AMapSearchAPI alloc] init];

    self.search.delegate = self;
    
    _nearbyManager = [AMapNearbySearchManager sharedInstance];
    _nearbyManager.delegate = self;

}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    
    [_nearbyManager stopAutoUploadNearbyInfo];
    _nearbyManager.delegate = nil;
    
}

- (void)beginSearchNearby
{
    AMapNearbySearchRequest *request = [[AMapNearbySearchRequest alloc] init];
    request.center = [AMapGeoPoint locationWithLatitude:39.001 longitude:114.002];
    [self.search AMapNearbySearch:request];
}

#pragma mark - TableViewDelegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.arrayList.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *mainCellIdentifier = @"mainCellIdentifier";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:mainCellIdentifier];
    
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:mainCellIdentifier];
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    
    cell.textLabel.text = self.arrayList[indexPath.row];
    return cell;
}
- (void)backEvent:(UIBarButtonItem *)paramItem
{
    [ApplicationDelegate goBackHomeView];
}


#pragma mark - Map Delegate
- (void)mapView:(MAMapView *)mapView mapDidMoveByUser:(BOOL)wasUserAction
{
    if (wasUserAction) {
        NSLog(@"did move byUser:%d", wasUserAction);
        latitude = mapView.centerCoordinate.latitude;
        longitude = mapView.centerCoordinate.longitude;
        [self beginSearchNearby];
    }
}

- (void)onNearbySearchDone:(AMapNearbySearchRequest *)request response:(AMapNearbySearchResponse *)response
{
    NSLog(@"nearby request:%@", [request formattedDescription]);
    NSLog(@"nearby responst:%@", [response formattedDescription]);
    
    [self.mapView removeAnnotations:self.mapView.annotations];
    
    for (AMapNearbyUserInfo *info in response.infos)
    {
        MAPointAnnotation *anno = [[MAPointAnnotation alloc] init];
        anno.title = [NSString stringWithFormat:@"%@(距离 %.1f 米)", info.userID, info.distance];
        anno.subtitle = [[NSDate dateWithTimeIntervalSince1970:info.updatetime] descriptionWithLocale:[NSLocale currentLocale]];
        
        anno.coordinate = CLLocationCoordinate2DMake(info.location.latitude, info.location.longitude);
        
        [self.mapView addAnnotation:anno];
    }
    
    [self.mapView showAnnotations:self.mapView.annotations animated:YES];
    
}

- (MAAnnotationView *)mapView:(MAMapView *)mapView viewForAnnotation:(id<MAAnnotation>)annotation
{
    if ([annotation isKindOfClass:[MAPointAnnotation class]])
    {
        static NSString *poiIdentifier = @"nearbyIdentifier";
        MAPinAnnotationView *poiAnnotationView = (MAPinAnnotationView*)[self.mapView dequeueReusableAnnotationViewWithIdentifier:poiIdentifier];
        if (poiAnnotationView == nil)
        {
            poiAnnotationView = [[MAPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:poiIdentifier];
        }
        
        poiAnnotationView.canShowCallout = YES;
        
        return poiAnnotationView;
    }
    
    return nil;
}


@end
